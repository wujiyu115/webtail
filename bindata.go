// Code generated by go-bindata.
// sources:
// data/template/err_page.html
// data/template/index.html
// data/template/realtime_err.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataTemplateErr_pageHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x3f\x8f\x23\x35\x14\xef\xf3\x29\xde\x85\x2d\x60\xb5\x93\xd9\xd5\xdd\x21\x34\x38\x41\x68\xe1\x10\x12\x82\x2b\x68\x28\x5f\xc6\x9e\x19\xeb\x1c\x7b\xb0\x5f\x72\x1b\x46\x53\x52\x50\x50\x81\x74\xa2\xa4\x46\xe2\x40\x02\x1a\x44\xc3\x77\x59\x74\xfb\x2d\xd0\x78\x26\x89\x93\x4c\x76\x73\x57\x20\x8a\xf3\x4a\x1b\xcb\xef\xcf\xef\xf7\x7e\xf6\xcb\x53\xd8\xbd\x0f\x3e\xbb\xfc\xfc\x8b\xc7\x1f\x42\x41\x33\x35\x19\xb0\xf6\x63\xc0\x0a\x81\x7c\x32\x00\x00\x60\x24\x49\x89\x09\x8b\xdb\xcf\xf6\xcc\xd1\x52\x09\xa0\x65\x29\xc6\x43\x12\x57\x14\xa7\xce\x0d\x5b\x1b\xe1\x54\x89\x51\x6e\x25\xf7\x3b\xa8\xfc\x69\xb3\x32\xa3\x29\xca\x70\x26\xd5\x32\x81\x85\xb0\x1c\x35\x9e\x01\x5a\x89\xea\x0c\x1c\x6a\x17\x39\x61\x65\xf6\xee\x76\x80\x93\x5f\x89\x04\x2e\x2e\xca\xab\x8d\x21\x35\xca\xd8\x04\xde\xb8\xef\xd7\xe6\x7c\x6a\x2c\x17\x36\x7a\x2a\x39\x15\x09\x6c\x85\x74\xa6\x55\xe4\xdb\x7e\xf5\x99\x15\x96\x4e\x24\xb0\xda\xb5\x2e\xb5\xff\xdf\x5b\x1f\x15\x41\x89\xb7\x10\x28\x91\x73\xa9\xf3\x04\xde\xe9\xa1\xe5\xf5\x4c\xc0\x19\x25\xf9\xf1\x9c\x31\x7d\x92\x5b\x33\xd7\x7c\xed\xc2\x45\xf3\x77\x37\x67\xfe\x3f\xe2\x9c\xf9\xb5\xc7\x79\xae\x46\x25\xe6\x52\x23\x49\xa3\x03\xba\x5c\xba\x52\xe1\x32\x01\xa9\x95\xd4\x22\x9a\x2a\x93\x3e\xe9\xa1\x7c\xbe\x39\x9b\xa1\xcd\xa5\x5e\x1f\x1d\x04\x51\xf2\x30\xce\xdd\xa1\x18\x04\x77\xb5\x4d\x15\x86\xdc\x32\x65\x90\x12\x50\x22\xa3\x1e\xc2\x0f\xcb\x2b\xb8\x38\x0f\x85\x6e\x3a\x2b\xe2\x22\x35\xd6\x83\x24\xa0\xcd\x11\x44\x46\x98\x92\x5c\x84\x8d\xd7\x23\xfa\x83\xcb\xf7\x1f\x3d\x3c\xdf\xeb\xa8\xa7\x85\xa4\x63\x4a\x4d\x0a\xb3\x10\x36\xd1\x86\xde\xec\xe0\xde\xba\x1d\x8f\x73\xfe\x72\x0a\x76\xef\xc8\x22\x97\x73\xe7\xc5\x79\x95\xc2\x5f\x3e\xc9\x16\x09\xb2\xa8\x9d\x6c\xb5\xdf\x2d\x0a\x46\xf7\xdd\xab\x94\xe4\x5b\xac\xed\x9a\x40\x96\x66\xc5\xa7\xf0\x91\xc5\x25\x9c\xc6\xbb\x69\xb7\x93\x26\x99\xb4\x8e\xa2\xb4\x90\x8a\xf7\x69\x46\xa6\x8c\x9a\x37\xb6\x5f\x77\xe0\x34\x35\x44\x66\x76\xc0\xef\x30\xb4\xc2\xbb\x90\xad\xcc\x8b\xa3\xa0\x0f\x38\x1e\xab\xe6\xba\xa9\xe1\x41\x88\x11\x9f\xc2\x39\x48\x07\x99\xb1\x40\xa6\x04\xd4\x1c\x5a\xc0\x11\x3c\x12\x42\x41\x66\x85\x00\x32\x90\x16\xa8\x73\x01\x92\x7a\xf4\xe6\x72\x31\x4a\x85\x26\x61\xc3\xc7\xd0\x74\x23\x2a\x99\xeb\x04\x5a\x63\x48\x98\xc5\xfe\xfb\x70\x32\x60\x71\x3b\x3b\x07\x6c\x6a\xf8\xb2\x9b\x97\x5c\x2e\x20\x55\xe8\xdc\x78\x88\xb3\x28\xcd\xba\x59\xe9\x6d\xf7\xa2\x08\xae\xbf\xfe\xf5\xc5\xcf\xbf\x54\xd5\xaa\x5e\x63\x47\x64\x08\x55\x89\xb9\x70\x75\x0d\x37\x3f\xfe\x0e\xd7\x7f\x7d\x77\xfd\xcd\xb7\xcd\x6e\xcb\x2f\x9d\x5b\xdb\xb8\xd5\x35\x44\x51\x90\x76\x1b\x32\xb3\x01\xa4\xb7\xcf\xd5\xca\xbc\xd1\x78\xc7\xc7\xfb\x29\xb9\xf2\x1b\x4e\x18\x42\x61\x45\x36\x1e\xc6\xa2\x05\x7d\x2f\x9d\xdb\xc7\x98\x8b\xf1\x16\x25\xff\x3e\x5b\x4e\xc3\xc9\xdf\x3f\xb1\x18\x27\x2c\x56\x72\x3f\x79\x55\x59\x7f\x09\x27\x52\x73\x71\x75\x76\xd2\xc4\x40\x32\x86\x20\x57\xa7\x40\x2f\xaf\xaa\x92\x19\x88\x2f\xe1\xa4\x47\x0e\x68\x93\xd5\xf5\x4a\x03\xff\xdd\x30\x84\xaa\x12\x9a\xd7\xf5\xad\xa5\x9c\xac\xb8\xaf\xb7\xb7\x95\xe0\xf3\xf5\xf1\x3b\x56\xae\xa6\xa7\xd6\x6a\xfd\xd9\x0f\xc5\xe2\xb9\x0a\x2e\x37\xe6\x72\xd1\x3d\xad\x60\xdb\x0e\xf7\xae\xe0\xf5\xb4\x0f\xdf\x1a\xd9\x9d\xb4\x54\x4c\x24\x67\x31\x15\xfb\xe7\x37\xdf\xff\xf0\xe2\xf9\xf3\x7e\xdb\x3f\xcf\xfe\xb8\x79\xf6\xdb\xb6\x8d\xc5\x61\xf6\xdd\xab\xe5\x48\xe8\xaf\x56\x58\x6b\x6c\x78\xa3\x3d\xa4\x78\xa3\x7c\x13\x31\xfa\x98\x37\xe2\x13\xdf\xf7\x60\xa5\x15\x6b\xb7\x4f\x4c\xfe\x29\xce\xfc\x45\x35\xc7\xfd\x11\x2b\xe7\x4b\x2b\x90\xc4\x5e\xe2\x5d\xfe\x9b\x7b\x65\xb1\x17\xf2\x75\x2f\xbf\xee\xe5\xff\xa2\x97\x59\xdc\x4e\x8e\x66\x94\xf8\x9f\x63\xff\x06\x00\x00\xff\xff\x50\xa5\x8a\x92\xa6\x0d\x00\x00")

func dataTemplateErr_pageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataTemplateErr_pageHtml,
		"data/template/err_page.html",
	)
}

func dataTemplateErr_pageHtml() (*asset, error) {
	bytes, err := dataTemplateErr_pageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/template/err_page.html", size: 3494, mode: os.FileMode(436), modTime: time.Unix(1492658262, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataTemplateIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x8f\x23\xc5\xf5\x7f\x9f\x4f\x51\x78\xf5\x97\xd8\x95\xbb\xa7\xdb\xf6\xf8\xd2\xf6\x8c\x58\xf8\x2f\x02\x09\x04\x49\x40\x09\x4f\xa8\xdc\x5d\xb6\x4b\xd3\xee\xea\x54\x97\x67\x3c\xdb\xb2\x04\x0a\x97\x40\x94\xbc\x84\x80\x20\x28\x80\x14\xa4\x55\x1e\x20\x4f\x88\x24\x02\xbe\x0c\x33\xbb\xfb\x2d\xa2\xba\x75\x57\x77\x97\x1d\x2f\x01\x65\x91\xd8\xd9\x99\xb1\xcf\x39\x55\xe7\x9c\x5f\x9d\x4b\x75\x95\x67\xf2\xc8\xff\x3f\xf7\xc4\x0b\x2f\x3d\x7f\x0b\x2c\xd8\x32\x3e\x39\x98\xf0\x5f\x20\x86\xc9\xfc\xb8\x85\x92\xd6\xc9\xc1\xc1\x64\x81\x60\x74\x72\x00\x00\x00\x93\x25\x62\x10\x84\x0b\x48\x33\xc4\x8e\x5b\x2f\xbe\xf0\xa4\x33\x6c\x99\xac\x05\x63\xa9\x83\x7e\xbd\xc2\x67\xc7\xad\x5f\x39\x2f\xde\x74\x9e\x78\xee\xd9\xe7\x6f\xbe\xf0\xf4\xe3\xcf\xdc\x6a\x81\x90\x24\x0c\x25\xec\xb8\xf5\xf4\xad\x63\x14\xcd\x91\x1e\xf9\x88\xe3\x80\x49\x8c\x93\x53\x40\x51\x7c\xdc\xca\xd8\x45\x8c\xb2\x05\x42\xac\x05\x16\x14\xcd\x14\xc5\x0d\xb3\xac\x75\x02\x1c\xe7\xe4\x60\x72\x28\x4d\x3a\x98\x4c\x49\x74\x61\xcc\x82\x93\x08\xad\x85\x88\x20\x45\xf8\x0c\x84\x31\xcc\xb2\xe3\xd6\x12\xe2\xc4\x39\xa7\x30\x55\x4a\x6d\x7c\x83\x25\xd8\x10\xe0\xe8\xb8\x75\xf9\xe5\x97\x77\xdf\xb9\x73\xf9\xf6\x47\xf7\x7e\xf3\x55\xeb\x64\x72\x08\x6b\x52\xc6\x24\x29\x4c\x50\x5c\x9b\xc5\x2a\xe3\x30\xcc\x62\x04\x42\x48\x23\x8b\xb8\x18\x82\xf5\x00\x1c\x92\x64\x46\x12\x06\xf8\x0b\x27\x22\xd2\xd2\xc9\x21\x3e\x01\xa6\x69\x60\x72\x18\xe1\xb3\x7d\x74\x73\xcc\xb6\x69\x35\x84\x29\x39\xdf\x22\x55\x97\xcc\x96\x4e\x1f\x2c\x23\xa7\x07\xe2\xb9\xd3\xdd\x31\xa8\x3e\x70\x87\xff\x95\x21\xd0\x1c\xe0\xf0\xb5\xc7\xc9\x1c\xf0\x88\x71\x18\x21\x31\xc3\xa9\x8e\x94\x43\x8a\x60\xcc\xf0\x12\xbd\x8c\x28\x6d\x01\x06\xe9\x9c\x07\xea\xcb\xd3\x18\x26\xa7\x7b\xa8\x12\xea\xb2\x14\x26\x15\x8d\x1c\xf9\x7d\x07\x1f\xf2\xd1\xdf\x55\x91\x08\x8b\xd6\xc9\xe5\x67\x7f\xb9\x7a\xef\x8b\x98\xcc\xbf\xfd\xe6\x93\xab\x57\x3f\xdf\x77\xce\x46\x6c\x5a\x85\x6a\xf8\xef\x0a\x87\xfa\xbf\x7b\x6f\xfe\xed\xf2\xed\x3b\x57\x7f\xb8\x73\xff\x95\x57\xaf\x3e\xfc\xfd\xe5\xdb\x9f\x5c\xbe\x7f\xe7\xde\xd7\x7f\xbc\x7c\xf3\x9f\x77\x3f\x78\xad\xb0\x77\x5b\x28\x56\x6d\xdd\x29\xb2\x83\xbd\x2d\xce\x7f\x0a\xff\xe3\xd6\x21\xa2\xf4\xe5\x14\xce\xd1\x8f\x36\xf4\xef\xbf\xf3\xfe\xbd\xcf\x3f\x7f\x86\xcc\xaf\xde\xfb\xf4\xf2\x9b\xf7\x1e\x9a\xd0\xbf\x7a\xe7\x8b\xfb\x7f\x7e\xa3\x08\xfa\xbb\x1f\xbc\x76\xf5\xd6\x2b\x57\x1f\xbe\x25\xed\xbd\xfc\xf8\x8d\xab\x8f\x7f\xdb\xbe\x7a\xf7\x1f\xdf\x7e\xfd\xcd\xd5\x47\x9f\xde\xfd\xf0\x77\x0f\x4b\x12\xd8\x48\xaa\xb1\xbd\xfe\xc5\xb7\xff\x7a\xf7\x7f\xdf\xd2\x96\x64\x8a\x75\x43\x13\x26\xfd\x94\xcb\x22\x97\xc3\x18\xc1\xe4\x47\xdd\xc7\xae\xbe\x7c\xfd\xfe\xfb\x7f\xbd\xf7\xd9\xdf\x2f\xbf\xfa\xd3\xdd\x0f\x5e\x93\xb9\xf2\xb0\x25\xf6\x76\x1b\x1f\xd2\x14\x36\xde\x9a\x2f\xc5\x26\x19\xb0\x8b\x14\x1d\xb7\x18\x5a\xb3\x43\xb1\x5f\x7e\xec\x14\x5d\xcc\x28\x5c\xa2\x0c\xcc\x60\x84\x9e\x4e\x72\xef\xff\x72\x92\xc2\x10\xb3\x8b\xc0\x1b\x3b\xe7\x68\x7a\x8a\x99\x03\x13\xbc\x84\x0c\x93\xc4\x61\x78\x89\x93\xb9\x33\x5b\x25\x21\x7f\x1f\x84\xab\x29\x0e\x9d\x29\xba\x8d\x11\x7d\xd4\x73\xbb\x6d\xe0\x89\xff\xfe\xf5\xf1\x77\x19\xb4\x19\xf4\xdd\x51\xa7\x34\xc1\xdf\xc3\x84\x18\x27\x08\xd2\x1d\xea\xa4\xc0\xc6\xf7\x0c\xdf\xfc\xcd\xa6\xe6\xfb\x73\x2b\x66\x3a\xbf\x8f\xe6\x1f\xd8\x79\xcf\x3d\xfa\xa1\xdc\xf7\x36\x9b\x1b\xb9\x9e\x7b\x4a\xd6\x4e\x86\x6f\xe3\x64\x1e\x4c\x09\x8d\x10\xe5\x94\xb1\xb3\x24\xb7\xb7\xb0\xac\xd4\xcd\x8d\x60\x8a\x66\x84\xa2\xf6\x8d\x00\xce\x18\xa2\xdf\xf7\xfc\xfc\xc9\x33\xe7\x7d\x81\xf3\x50\xe0\x7b\xe9\xba\x80\x87\xc1\xd4\x59\xe0\xf9\x22\xc6\xf3\x05\x73\x42\x12\x13\x1a\x30\x0a\x93\x2c\x85\x14\x25\x6c\xc3\x33\x5e\x8e\x9d\xc1\x25\x8e\x2f\x82\xa7\x50\x7c\x86\x18\x0e\x61\xfb\x26\xc5\x30\x6e\xb7\x9e\xc7\xc9\xfc\x49\x98\xcc\xc1\x2f\x9e\x68\xb5\x5b\xcf\xe2\x90\x92\x8c\xcc\x18\x78\x09\x3e\x85\x70\xab\xdd\xfa\x25\x4a\x7e\xb6\x82\xc9\x4b\x18\x08\x1e\x90\x54\x46\x16\x64\x09\xdb\x19\x4c\x32\x27\x43\x14\xcf\x5a\x63\xc3\xc2\x5e\xba\x1e\x73\xf4\x9d\x05\xe2\x76\x05\xbe\xdb\xeb\x0c\x8f\x06\x7e\xaf\x3b\x96\x26\x5e\xeb\x76\xbb\xe3\x29\x0c\x4f\xe7\x94\xac\x92\x48\x19\x7e\x6d\x36\x9b\x8d\x97\x90\xce\x71\x12\x78\xe3\x14\x46\xbc\x09\x04\xde\xe6\xb1\x25\x8a\x30\x04\x59\x48\x11\x4a\x00\x4c\x22\xf0\xe8\x12\xae\x9d\x73\x1c\xb1\x45\x00\x06\xfd\x41\xba\xbe\x9e\x0b\x4f\x2d\x53\x8e\xf8\x97\x9e\xcc\xa1\xc2\x1e\x0f\x3c\x82\x97\x29\xa1\x0c\x26\x6c\x63\x9d\x9e\x3f\x15\xeb\xe9\x87\xe9\xfa\x7a\x43\xeb\x68\xe4\x17\x5a\x77\x4d\x8e\x93\x74\xc5\xda\xd3\x15\x63\x24\x69\x67\x28\x46\x21\x6b\xf3\x32\x04\x29\x82\x95\x85\xc1\xc9\x02\x51\xcc\x0c\x18\x35\xc5\x44\x52\xd3\x8a\xf4\x48\x53\x04\x29\x4c\x42\x14\x24\x24\x41\x32\x82\x16\x30\x22\xe7\xe2\xfd\x26\x08\x44\xb8\x49\xc5\x98\x24\x06\x42\xc1\x35\xdf\xf7\xc7\x25\xf2\x9b\x20\xd8\x4b\x0c\xe6\xdc\x7e\x27\x42\x21\xa1\x22\xf1\xa4\x26\x18\x2c\xc8\x19\xa2\xb9\x5e\xe0\xe1\xe3\x83\x5b\x37\xb9\x7e\x65\x69\x16\x52\x12\xc7\x53\x48\x73\x89\x20\x8f\x11\xe5\x14\x7f\xd9\x5c\xb9\x4e\xa7\x63\x1b\xee\x30\x0a\xc3\xd3\x6a\x8e\x49\x87\x71\x92\x21\x06\x3c\xe0\x81\x7e\xba\x06\x74\x3e\x85\x8f\x7a\x6d\xf1\xe5\x76\xaf\x3f\x88\x82\xc5\x6a\x39\x55\x56\x76\xac\xa6\x0d\x87\xc3\x8d\x1b\x92\x84\x41\x9c\x20\x5a\x5b\x7f\x91\x9f\x9a\x14\xa3\x99\xa2\xc8\xb8\x56\x32\x70\xc5\x88\xa6\x08\x11\x4e\x30\xa6\x94\x85\xa4\xed\x52\x72\x6e\xbc\x14\x5b\xc2\x18\xa9\x2a\xc3\xf7\x41\x34\x98\x12\xb6\x18\xab\x13\xa4\xa0\xd5\x1a\x47\x38\x4b\x63\x78\x11\x30\x38\x8d\x91\x0e\xed\x66\x3c\xe7\x86\xf9\x92\x31\x38\xf2\xd2\xf5\xc6\x36\x62\x34\xea\x58\x47\x8c\x06\xe6\x88\xdd\xd9\xe9\x2e\x70\x14\xa1\xc4\x59\x67\xb9\xb6\x50\x44\x8d\xe1\xb3\x33\x8b\x57\x38\xfa\xfe\xc0\xa4\xe4\x3c\xaf\xc8\x39\xe6\x50\x21\x28\x28\x1b\x03\xda\xfd\x06\xec\xe7\x71\x73\x56\x31\x85\x57\x35\xde\xdb\x6c\xdc\x65\xe4\x74\x9d\xa3\x36\xff\x3d\xe4\xbf\xd7\x99\xe3\xb7\xdd\x6c\xc9\x7f\x2e\x23\xfe\x33\x9e\xf3\x9f\xeb\xcc\xe9\x08\x7a\x47\xd0\x3b\x82\xde\x11\xf4\xae\xa0\x77\x05\xbd\x2b\xe8\x5d\x41\xef\x09\x7a\x4f\xd0\x7b\x82\xde\x13\xf4\x23\x41\x97\x3a\x8f\x04\x5d\xea\xed\x0b\x7a\x5f\xd0\xfb\x82\xde\x17\xf4\x81\xa0\x0f\x04\x7d\x20\xe8\x03\x41\x1f\x0a\xfa\x50\xda\x2e\xe8\x43\x41\x1f\x09\xfa\x48\xd0\x47\x82\x3e\x92\x7e\x79\xd2\x31\x4f\x7a\xe6\x49\xd7\x3c\xc9\x53\x4e\x2b\xaf\x95\xdb\xd2\x6f\x5f\x3a\xee\x4b\xcf\x7d\xe9\xba\xdf\xc9\x53\x92\x61\x51\x83\x28\x8a\x21\xc3\x67\x68\xcc\x03\x57\xb7\x1d\x23\x76\x76\x85\xd3\x46\x21\x2e\xf1\x95\x68\x4a\xec\x24\x52\x12\x17\x89\x82\xf4\x59\x7a\xa8\xfc\x51\xa6\x0b\x2b\xf3\x59\x4c\x20\x0b\xf8\xd4\x1b\x45\x91\x61\xc1\x77\x21\x92\xe2\xeb\xf4\xf1\xdd\xbe\xfc\x37\x50\x1c\x4f\x71\x86\x5d\xb7\xab\xfe\x49\xce\xa8\xc8\x51\xf9\x7e\xa8\xde\xf7\xfb\xb5\x29\x06\x8a\x71\x34\xac\xcd\xd0\xd7\x0c\x65\xc5\x91\xae\xc2\x75\x23\x7a\x8a\xd1\xad\xdb\xd0\xd5\x15\x51\xd9\x50\x38\x56\xb7\x41\xfb\x67\x9a\xb0\xa3\x0e\xc9\x30\x97\x41\x2d\x43\x58\x06\xac\x0c\x4f\x19\x8c\x32\xf4\x64\xa0\xc9\xb0\x52\x31\xa4\xc2\x45\x44\x46\x05\x7a\x49\x31\xa1\x17\xa2\x56\xe8\xc5\x5c\x56\xe8\xb9\x2e\x13\x7a\x6e\x81\x15\x7a\x6e\xa0\x15\x7a\x6e\xbf\x09\x3d\xf7\xca\x0a\x3d\x77\xda\x0a\x3d\xc7\xc4\x84\x9e\x23\x65\x85\x9e\xbb\x61\x81\x7e\x57\x45\xaf\x17\x1e\x59\x6c\x64\x69\x91\x85\x44\x96\x0d\x59\x24\x64\x49\x90\x05\x40\xa6\xbb\x4c\x6e\x95\xc8\x2a\x67\x45\x7a\x56\xd6\x42\x52\xcc\xb5\x10\xa2\xd6\xb5\x10\x73\x59\xd7\x82\xeb\x32\xd7\x42\xda\xac\x29\x9e\x3b\xac\xca\xda\xd7\x89\x1b\x6f\x5d\x27\xee\x9b\xb9\x4e\xdc\x63\xeb\x3a\x71\x40\xac\xeb\x24\xb1\xd4\x2b\x35\x72\xfd\x72\x40\x65\xfd\x38\xba\xd6\xf5\xe3\xae\x5b\xd6\x8f\xd3\xc9\x6c\x96\x21\xc6\x51\x34\x3b\x49\x81\xa5\x66\xfb\x15\x76\x03\x58\x2d\xe6\x55\xc4\x1a\x28\x2b\xb1\x51\x45\x4a\x43\xae\x98\xc3\x0a\xb3\x81\xb1\x92\x1a\x54\xa4\x1a\x80\x2b\xa9\x7e\x55\xaa\xea\xd3\x51\x85\xd9\x58\x0a\x25\xd5\xab\x48\x35\xd6\x45\x49\x75\x2b\x52\x9d\xaa\x47\x35\x68\xb7\x78\x54\x45\x78\x8b\x43\x55\x7c\x3d\x6b\x06\xfa\x5d\xcf\x13\x29\x28\x3b\xbb\xec\xe3\xb2\x6b\xcb\x1e\x2d\x3b\xb2\xec\xbf\xb2\xdb\xca\xde\x2a\x3b\xa9\x6a\x9a\xaa\x3f\xca\x56\x68\xa6\x9c\xa4\x98\x29\x27\x44\xad\x29\x27\xe6\xb2\xa6\x1c\xd7\x65\xa6\x1c\xb7\xc0\x9a\x56\xdc\x40\x6b\x5a\x71\xfb\xcd\xb4\xe2\x5e\x59\xd3\x8a\x3b\x6d\x4d\x2b\x8e\x89\x99\x3e\x1c\x29\x6b\xfa\x70\x37\x6c\xe9\x13\xcf\x9d\x74\x15\xc7\x1c\x0f\xbd\x07\xf0\x4c\xb2\xaf\xc8\x0d\x50\x24\xdb\x53\xec\x06\x32\x82\x3d\x52\x5c\x0d\x8f\x20\x0e\x15\xb1\x81\x91\xe0\x0e\x14\xb7\x01\x94\xe0\xf6\x35\xd7\xb4\xf1\x48\x11\x1b\x90\x09\x6e\x4f\x71\x1b\xb8\x09\x6e\x57\x71\x3b\xa6\x85\x05\x14\x56\x0b\x35\x22\x56\x03\x35\x1e\x72\x8f\x2d\xa8\xd9\x82\x83\x6b\x94\xa4\x82\xea\xe7\x96\x4a\x54\x70\xbd\xdc\x52\x80\x34\x77\x94\x97\x75\x47\xd3\x86\xb9\xa5\xdc\x68\xe6\x20\xb7\x54\x19\xcd\xec\xe7\x65\x71\xd1\xb4\xa3\xdc\x52\x53\x34\xb3\x97\x5b\x4a\x89\x66\x76\xf3\xb2\x82\x68\x9a\x06\xc0\x6a\x9b\xc2\xc1\x6a\x9a\x42\xa1\xc0\x73\x57\xad\x37\xd8\xbb\x6a\xbd\x21\xb6\xab\xd6\x97\x62\x96\x5a\x5f\x32\x77\xd5\xfa\x52\x6a\x57\xad\x2f\xa5\x2c\xb5\xbe\x64\xee\xaa\xf5\xa5\xd4\xae\x5a\x5f\x4a\x59\x6a\x7d\xc9\xdc\x55\xeb\x0d\xec\xb6\xd7\xfa\x52\xa8\x51\xeb\xdd\x29\x81\x34\xca\x8d\x63\x09\x2f\x5d\x03\xfe\xdd\x4f\xd7\xe0\x1a\xea\xf2\xaf\xb1\x79\xbc\x32\x9b\xcd\x36\x6e\x68\x19\xd4\x51\x03\xc5\x49\x86\x3f\xf0\xda\xfa\xdb\x73\xfd\xeb\xf5\x29\xf4\x53\xe5\x94\x30\x46\x96\x41\x87\x3f\xe8\xa8\x33\x44\x0a\x23\xbc\xca\x82\x6e\xed\x59\xb6\x53\x7f\x8e\xee\xf0\x27\x21\x6e\x08\x70\xcd\x5b\x98\x9c\x9c\x21\x3a\x8b\xc9\x79\x20\x9f\xe1\x6b\x9a\x06\xe9\xba\x38\x74\x98\xc6\x24\x3c\x1d\x87\x2b\x9a\x11\x1a\xa4\x04\x27\x0c\xd1\xe2\x1c\x8f\x3f\x69\x01\x7f\xc8\x9d\x32\x4e\x01\x6d\x1a\xad\x27\x49\x16\x39\xf5\x0e\x87\x24\xd1\xbd\xa3\x53\x9e\x2a\x89\xd7\x35\x08\x38\xa9\xec\x93\x55\xbb\xff\x83\x06\x80\x97\xf3\xbc\xea\x68\xd9\x5f\xb5\x4e\xf1\xba\xa9\x73\xc7\xd4\xe2\x4a\xa8\x36\x6f\xe5\x01\xb5\x67\x9c\x41\x30\x92\x06\x7d\xee\x02\x49\x98\x73\x2e\x55\x0e\x3c\xcf\x3c\x7a\x3d\x4a\xd7\x0a\x5d\x75\x54\x58\xd1\x2d\x8e\x2b\x15\xae\x32\xe6\xcd\xb1\x1c\x9d\xf3\x05\x66\xc8\xc9\x52\x28\x4e\x14\xcf\x29\x4c\xc7\xe2\xb8\xaf\x08\x02\x14\xc7\x38\xcd\x70\x36\xde\x1d\x16\x9d\xf2\x41\x3b\xf0\xc4\xb2\x57\x0c\x99\x11\xc2\xca\x93\x33\x25\x01\xec\x52\x40\x9c\x65\x55\x76\x33\x5b\x64\x00\x8b\xe4\xe1\x24\x8c\xf1\x3c\x09\x42\x24\x02\xb0\x1a\x8f\xdb\x07\xbb\x11\x49\xd0\x8e\xa8\xab\x0a\x4f\x59\xe2\x9c\x61\x74\x6e\x2a\x14\x41\x55\x03\x54\xcd\x37\x9d\x4e\xf7\x98\x0c\xc0\xdc\x94\x2f\x6f\x73\xe5\x28\x95\x18\x66\x9d\x00\xdd\x74\x2d\xbe\x2d\x55\xa2\x73\x5d\x4d\xb1\xfd\x5c\xbc\x1a\xab\x7d\x63\xd1\x3a\xa2\x04\x19\xc1\xa7\x16\xb6\xb7\xff\x09\x98\xd4\x5d\x9e\xe3\x2b\x6b\x80\x6b\xdc\x8c\x17\x6c\xbe\xfe\x02\x30\x9d\x0b\x38\x11\x07\xdf\x32\x25\xaa\x36\xf8\x45\x12\x94\x38\x9b\x39\x31\xf2\x8a\x12\xd3\xef\xf7\x6d\x6a\x81\xab\x2f\xdb\x73\x73\xa0\xef\x79\x35\x69\x91\x31\xb5\x50\xdf\xb8\xf2\x5c\x4f\xa4\x32\xa2\xe2\xf3\x73\x95\x63\xcd\x71\xf3\x58\xea\xb6\x23\x3e\x84\xc7\x35\xe8\x62\xd1\x17\x87\x51\x5a\x72\x86\xd7\x28\x1a\xf3\x0c\xf7\xc6\xea\xa0\x50\x9d\x10\x5a\x0e\xa0\xfd\x01\xff\xda\x73\x19\x76\x18\x2b\x0b\xdf\x03\x5c\xb0\xec\xba\xea\x70\x8b\x0f\x13\xd6\x9a\xe2\x7f\x73\xc1\xb2\x65\x52\x7f\xf8\x00\x67\xcf\xdb\xec\xda\xb8\x33\x8a\x51\x12\x65\x4e\x84\xb2\x90\xe2\x54\x5c\x7d\x6c\xcd\x5f\xb3\x0a\xf7\x8a\x46\x22\x90\xd8\xd3\x10\x9b\xba\xda\x71\xb8\x16\x41\x4b\x88\xe3\x2d\xb6\x78\x9e\xf7\xfd\xd9\x22\x15\xd5\xac\xe0\x88\x15\x6b\xcd\x75\x74\xcb\x42\x10\x78\x40\x6c\x56\x77\xaf\x6a\xf1\x80\x2b\xa6\xd2\xb5\xfb\x68\xeb\xaa\xd5\x0f\xa7\x1a\x76\xfb\x9d\xd1\xa8\x3e\xe1\xa0\xbf\xc7\x7c\x7b\xc4\x57\xf1\xec\xfa\x80\x41\x95\x17\x88\x54\x0e\x96\x45\x9b\xe6\xbd\x6c\xe3\xca\x1b\x35\x67\x0a\x69\x1e\xe3\x8c\x39\xe2\xd3\x08\xaa\x46\xe8\xba\x58\xef\xa4\xe6\x28\xb0\x2a\xd7\xa6\x52\x10\x8d\x05\x1f\x3f\xd8\x66\xb3\xba\xe9\xf3\x1b\x9b\xa4\x9e\xd9\xb9\xcd\x38\xf3\x2a\x86\xc5\xd8\x6a\x58\x4d\x26\x88\x61\xc6\x9c\x70\x81\xe3\x08\xc0\xbc\xb8\xd4\xe6\x55\x5c\x1a\x60\x6a\x55\x6c\x46\xd2\xad\x3c\x35\x94\x27\xb0\xe6\x7a\xe6\xb8\x0a\xa3\x66\x4b\xc3\x00\x53\xb8\xa6\xbf\xce\xb2\xae\x41\xa5\x18\xd7\xef\xbf\x35\x84\xbc\x37\xcb\x4b\x86\x9a\x31\x2e\x0c\x79\x67\xb0\xf4\x66\x35\xa1\x71\xe7\xea\xa6\x70\x8e\x2c\x3b\xd0\x32\x2e\xcd\x5d\xa8\x71\x21\x26\xea\x86\xcc\x57\x39\x87\xae\x81\xa2\xdf\x7a\x9b\x6b\xe6\x47\xac\xca\xdb\x14\x38\xcd\x48\xbc\x62\xd5\xb6\xc5\x63\xa0\xc3\xb3\x5a\xf6\x27\x91\xe0\xe3\x32\xd1\x86\xb2\x44\x68\x83\x3a\x62\xef\x20\x5f\x0b\x83\x6a\x9b\x54\xb3\xed\xf6\xbd\xf2\xba\xbf\xd8\x07\x54\xae\xa0\x25\x22\x26\x09\x21\x64\x09\xdc\xca\xa7\x0e\x86\x65\xc9\xbc\xe9\xdf\x1c\x3c\x3e\x18\x57\xca\xdc\x5e\x79\x5e\x05\xc8\x1c\x5f\xe9\x7d\x15\x31\xe0\xaa\x17\x6a\x8b\x53\x5d\xd6\xda\x76\x2a\x5d\x6f\x1b\xac\x6e\x75\xf3\xad\x61\xd6\xad\xc1\xc8\x17\xe9\x3b\xef\xdf\x37\xae\xda\x93\x1b\x19\xdf\x1d\x36\xb6\x7f\x26\xa8\xbc\x27\xd6\x3a\x54\x6d\x33\xbc\x6f\x2f\x92\x9a\x1b\x5b\xf7\x8d\x36\x0a\xc0\xda\x69\x48\xa5\x19\x96\x52\xd6\x27\xc7\x07\xb1\x01\xa8\xdf\x0e\x5f\x92\xfa\x36\xa9\x2e\xc3\x0b\x85\x0c\xc1\xe2\x1a\xa2\x7c\x12\x6c\xf4\x4b\x3d\x0a\xb2\xe6\x7e\xb2\x60\x01\x58\x53\x6a\xb2\xf6\x7a\x04\x15\xba\x0e\x0e\x6f\x5c\x03\x19\x59\xd1\x10\x3d\x0b\xd3\x14\x27\xf3\x17\x7f\xfe\xcc\x71\xf1\xf7\x22\xee\x12\xa6\xe0\xc6\xe1\xc1\xe4\x50\x90\x4e\x0e\x26\x87\xf2\x2f\x46\x0e\x26\x87\xf2\xcf\x5d\xfe\x1d\x00\x00\xff\xff\xde\x20\xee\x7c\xff\x32\x00\x00")

func dataTemplateIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataTemplateIndexHtml,
		"data/template/index.html",
	)
}

func dataTemplateIndexHtml() (*asset, error) {
	bytes, err := dataTemplateIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/template/index.html", size: 13055, mode: os.FileMode(436), modTime: time.Unix(1492658590, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataTemplateRealtime_errHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4b\x8f\xdb\x36\x10\xbe\xfb\x57\x4c\x99\x14\x2b\x21\x36\x69\x39\x69\x81\x55\x64\x5d\xda\x02\x3d\x14\x49\xd0\x6c\x91\x33\x2d\x8e\x25\xee\x52\x24\x4b\xd2\x91\x5d\x43\xff\xbd\x90\xe4\xa7\xbc\x8b\x8d\x0f\x84\x67\x3e\x72\x1e\xdf\x3c\x94\x55\xa1\x56\xf9\x24\xab\x90\x8b\x7c\x02\x00\x90\x05\x19\x14\xe6\xdf\x70\xf5\xc0\xa5\xca\xd8\x20\x0e\x90\x2f\x9c\xb4\x01\xbc\x2b\x96\xa4\x0a\xc1\xfa\x94\x31\xfe\xc8\xb7\xb4\x34\xa6\x54\xc8\xad\xf4\xb4\x30\x75\xaf\x63\x4a\xae\x3c\x7b\xfc\x77\x83\x6e\xc7\xde\xd3\x84\x26\x07\x81\xd6\x52\xd3\x47\x4f\xf2\x8c\x0d\xf6\x8e\xc6\xc3\x4e\x21\x84\x9d\xc5\x25\x09\xb8\x0d\xac\xf0\x9e\x0c\x58\xf7\x5b\x19\xb1\x83\xfd\x49\xec\x55\xbc\x78\x2a\x9d\xd9\x68\x31\x2b\x8c\x32\x2e\x85\xa6\x92\x01\x3f\x5e\x5d\x3a\x20\x2b\xc5\x8b\xa7\x6b\x64\x6d\x74\x48\x21\x79\x6f\xb7\x2c\xa1\x1f\xa0\x36\x9a\x17\x66\x0a\xe4\x37\xb3\x71\x12\x1d\x7c\xc2\x86\x4c\xe1\x20\x4d\x3b\xdc\x78\xcb\x8b\x91\xfd\x9a\xbb\x52\xea\x14\xe6\x76\x7b\x0d\x58\x2e\x84\xd4\x65\x0a\xc9\xdc\x6e\xfb\xe3\x8c\xb7\x93\xd3\xdf\x2a\x79\x35\xab\x37\x8b\xc5\xe2\xd9\xa4\x4a\x87\xa8\x77\xa8\x94\x69\x6e\x53\x9b\x79\xf9\x1f\xa6\x90\xd0\x05\xd6\xcf\xa0\x0d\xca\xb2\x0a\x29\xfc\x3a\x9f\x8f\xe2\x36\x5e\x06\x69\x74\x0a\x6b\xb9\x45\x71\x0d\x36\x52\x84\xaa\x4b\x69\xfe\xf3\x0b\x34\x5c\xab\x83\xb1\x37\x3a\x85\xeb\x70\xa3\x3c\xb1\xf5\x8b\xdd\xc2\xe2\x25\xb2\xde\xd4\xe8\x3d\x2f\xd1\x8f\x38\x3b\x7a\xef\xa9\x3e\xd2\xfd\x5a\x49\x6e\xe0\x23\xdd\xf7\xf7\xf7\xaf\x78\xb7\x23\xff\x7d\xdf\xcd\xfa\xee\x48\xc1\x3a\x9c\x35\x8e\xdb\x11\x73\xc6\x89\x5e\x9d\xc2\xca\x21\x7f\x9a\x75\x8a\x1f\x6d\x55\x25\x35\xce\xaa\x43\xc5\x6e\xc9\xbf\x2c\xf7\x87\x6b\xea\xba\x33\x63\xfd\x6c\xe5\x93\x8c\x0d\x73\x9e\x75\xc3\xd4\x4d\x7d\x92\xef\xf7\xf4\x2f\x53\xb6\x6d\xc6\xaa\x24\x9f\x64\x42\x7e\x07\x29\x96\xe4\x98\x69\x37\xa5\x42\x7e\xcf\x27\xd9\xe5\xac\xbe\x8d\x84\x29\x36\x35\xea\x10\x53\x87\x5c\xec\xa2\xf5\x46\x17\x5d\xd3\x40\x14\x5f\x50\x23\xd7\x10\x35\x52\x0b\xd3\xd0\x6f\xb8\xfa\x6a\x8a\x27\x0c\xf1\x98\x3a\x0f\x4b\xd0\xd8\xc0\xe9\x46\x44\x9a\x6e\xb1\xec\xf7\xf4\x4f\xe3\x43\xdb\xb2\xb5\xe9\x3a\x9c\xc4\x23\x42\x3d\x35\xfa\x10\x27\x2c\xe1\x1c\x01\x8e\x5d\x0c\x21\x93\x53\xf9\x48\x4c\xb9\xb5\xa8\x45\x44\x32\x9b\x13\x78\x07\x48\x05\x0f\x1c\xde\x01\xc9\x98\xcd\xc7\x9e\x86\xda\x68\x6f\x14\x52\x65\xca\x88\x34\xb8\xf2\x7d\xa8\x29\x9c\x5f\x3f\xf3\xe8\x6d\x74\xd7\xed\xd7\x69\xbf\xbc\xee\x62\xca\xb5\xac\x79\xc0\x68\xef\x0b\x67\x94\x7a\xe8\x86\xe3\x92\xcb\xa1\xc2\x51\xdc\x4e\xe1\x6e\xcd\x7d\xb8\x1b\xd9\x6c\x2f\x2a\x0b\xa8\x3c\x8e\x12\xe5\x0a\x5d\x88\xc8\x89\x49\xf8\xf4\xf9\x01\xbe\xfe\xf3\xe5\xcb\xe7\xbf\x1f\xfe\xf8\xfd\xa7\xcb\xbc\x86\xce\x68\xe3\x8f\x93\xf3\x1a\xce\xd8\xa1\x2f\xd8\xf0\x55\xf8\x3f\x00\x00\xff\xff\xf0\x94\x14\x9e\x1d\x06\x00\x00")

func dataTemplateRealtime_errHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dataTemplateRealtime_errHtml,
		"data/template/realtime_err.html",
	)
}

func dataTemplateRealtime_errHtml() (*asset, error) {
	bytes, err := dataTemplateRealtime_errHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/template/realtime_err.html", size: 1565, mode: os.FileMode(436), modTime: time.Unix(1492573281, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/template/err_page.html": dataTemplateErr_pageHtml,
	"data/template/index.html": dataTemplateIndexHtml,
	"data/template/realtime_err.html": dataTemplateRealtime_errHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"template": &bintree{nil, map[string]*bintree{
			"err_page.html": &bintree{dataTemplateErr_pageHtml, map[string]*bintree{}},
			"index.html": &bintree{dataTemplateIndexHtml, map[string]*bintree{}},
			"realtime_err.html": &bintree{dataTemplateRealtime_errHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

